/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        struct ListNode* curr = head;
        int len = 0;

        while (curr) {      // same as while (curr != nullptr)
            curr = curr -> next;
            len ++;     // stores len (linked list)
        }   
        curr = head;
        if (n == len)       // if head node itself is to be removed
            head = head -> next;
        else {      
            for (int i = 0; i < len - n - 1; i ++)      
                curr = curr -> next;        // iterate till prev node of node to be removed
            curr -> next = curr -> next -> next;    // update pointers to skip removed node
        }
        return head;
    }
};